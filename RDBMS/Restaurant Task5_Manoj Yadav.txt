1. Retrieve the names and locations of restaurants with a rating of 4.5 or higher.
SELECT Name, City 
FROM Restaurants 
WHERE Rating >= 4.5;

2. Find the total number of orders placed by each customer.
SELECT CustomerID, COUNT(*) AS TotalOrders 
FROM Orders 
GROUP BY CustomerID;

3. List all restaurants offering "Italian" cuisine in "Mumbai".
SELECT Name, City 
FROM Restaurants 
WHERE CuisineType = 'Italian' AND City = 'Mumbai';

4. Calculate the total revenue generated by each restaurant from completed orders.
SELECT R.RestaurantID, SUM(O.OrderAmount) AS TotalRevenue
FROM Restaurants R
JOIN Orders O ON R.RestaurantID = O.RestaurantID
WHERE O.OrderStatus = 'Delivered'
GROUP BY R.RestaurantID;

5. Retrieve the most recent order placed by each customer.
SELECT O.CustomerID, O.OrderID, O.OrderDate
FROM Orders O
WHERE O.OrderDate = (
    SELECT MAX(OrderDate)
    FROM Orders 
    WHERE CustomerID = O.CustomerID
);

6. List customers who have not placed any orders yet.
SELECT C.FirstName, C.LastName, C.Phone
FROM Customers C
LEFT JOIN Orders O ON C.CustomerID = O.CustomerID
WHERE O.OrderID IS NULL;

7. Identify the most reviewed restaurants.
SELECT RestaurantID, COUNT(*) AS ReviewCount
FROM Reviews 
GROUP BY RestaurantID 
ORDER BY ReviewCount DESC 
LIMIT 1;

8. Find the most preferred payment method.
SELECT PaymentMethod, COUNT(*) AS UsageCount
FROM Payments
GROUP BY PaymentMethod
ORDER BY UsageCount DESC
LIMIT 1;

9. List the top 5 restaurants by total revenue.
SELECT R.Name, SUM(O.OrderAmount) AS TotalRevenue
FROM Restaurants R
JOIN Orders O ON R.RestaurantID = O.RestaurantID
WHERE O.OrderStatus = 'Delivered'
GROUP BY R.RestaurantID
ORDER BY TotalRevenue DESC
LIMIT 5;

10. Show the details of all cancelled orders along with the customer's and restaurant's names.
SELECT O.OrderID, C.FirstName, C.LastName, R.Name AS RestaurantName, O.OrderAmount
FROM Orders O
JOIN Customers C ON O.CustomerID = C.CustomerID
JOIN Restaurants R ON O.RestaurantID = R.RestaurantID
WHERE O.OrderStatus = 'Cancelled';
